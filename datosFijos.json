{
    "ZABBIX": {
        "Monitorizacion": "ZABBIX",
        "Type": "Test Case",
        "Priority": "Minor",
        "AffectsVersions": "None",
        "Label": "None",
        "TestType": "Non Functional",
        "TestScope": "System",
        "ExecutionMode": "Manual",
        "AutomationCandidate": "Unknown",
        "Regression": "Progression",
        "TestPriority": "Normal",
        "TestReviewed": "Yes",
        "PreRequisites": "||REAL||SIMULATED||\n|Stop _service_|Add manually in log, the following trace:|",
        "Procedure": {
            "GIVEN": "the situation in Pre-requisites",
            "WHEN": "the operator accesses to Zabbix Problems",
            "AND": "filter by:\n|*name*|ALARMNAME|\n|*hosts*|COMPONENTNAME Watcher|",
            "THEN": "check the Zabbix alarm in 'Expected Result' for each case defined in 'Dataset'"
        },
        "ExpectedResult": "||Case||Severity||Alarm Name||Alarm Text||Action||\n|a|SEVERITY|ALARMNAME|ALARMTEXT|ACTION|\n|b|-|-|-|-|",
        "DataSet":"||Case||Patern To Search||Condition||\n|a|PATTERNTOSEARCH|CONDITION||\n|b|-|RECOVERY||\n"
    },
    "GRAFANA PLATFORM": {
        "Monitorizacion": "GRAFANA PLATFORM",
        "Type": "Test Case",
        "Priority": "Minor",
        "AffectsVersions": "None",
        "Label": "None",
        "TestType": "Non Functional",
        "TestScope": "System",
        "ExecutionMode": "Manual",
        "AutomationCandidate": "Unknown",
        "Regression": "Progression",
        "TestPriority": "Normal",
        "TestReviewed": "No",
        "Resolution": "Unresolved",
        "FixVersion": "None",
        "PreRequisites": "Graphic in a [*Grafana Dasboard*|https://zeus-pre.labs.gvp.telefonica.com/d/hf7XXP_nz/tools-metrics-gal] configured with this query and to retrieve data from *Database = DBINFLUX*{noformat}SELECT last(<FIELD>) FROM <MEASUREMENT> WHERE <COMPONENT> $timeFilter GROUP BY time($__interval), 'sender' fill(none){noformat}",
        "DataSet": "||MEASUREMENT||COMPONENT||FIELD||UNIT||\n|MEDIDA|pod name (POD)|METRICA|Integer|",
        "Description": "*GIVEN* a Graphic configured as in Pre-requisites and dataset\n*WHEN* you stress the <COMPONENT>\n*THEN* check if the Graphic has variations"
    },
    "GRAFANA PROMETHEUS": {
        "Monitorizacion": "GRAFANA PROMETHEUS",
        "Type": "Test Case",
        "Priority": "Minor",
        "AffectsVersions": "None",
        "Label": "None",
        "TestType": "Functional",
        "TestScope": "System",
        "ExecutionMode": "Manual",
        "AutomationCandidate": "Unknown",
        "Regression": "Progression",
        "TestPriority": "Normal",
        "TestReviewed": "No",
        "Resolution": "Unresolved",
        "FixVersion": "None",
        "PreRequisites": "Graphic in a [*Grafana Dasboard*|https://zeus-pre.labs.gvp.telefonica.com/d/hf7XXP_nz/tools-metrics-gal] configured with this query and to retrieve data from *Database = DBINFLUX*{noformat}SELECT last(<FIELD>) FROM <MEASUREMENT> WHERE <COMPONENT> $timeFilter GROUP BY time($__interval), 'sender' fill(none){noformat}",
        "DataSet": "||MEASUREMENT||COMPONENT||FIELD||UNIT||\n|MEDIDA|pod name (METRIC)|M\u00e9trica|TYPE",
        "Description": "*GIVEN* a Graphic configured as in Pre-requisites and dataset\n*WHEN* you stress the <COMPONENT>\n*THEN* check if the Graphic has variations"
    },
    "KIBANA": {
        "Monitorizacion": "KIBANA",
        "Type": "Test Case",
        "Priority": "Minor",
        "AffectsVersions": "None",
        "Label": "None",
        "TestType": "Non Functional",
        "TestScope": "System",
        "ExecutionMode": "Manual",
        "AutomationCandidate": "Unknown",
        "Regression": "Progression",
        "TestPriority": "Normal",
        "TestReviewed": "Yes",
        "Resolution": "Unresolved",
        "FixVersion": "None",
        "DataSet": "||level||log example||\n|CRITICAL|{noformat}{noformat}|\n|INFO|{noformat}{noformat}\n|DETAIL|{noformat}{noformat}|\n|ERROR|{noformat}{noformat}|\n|WARNING|{noformat}{noformat}|",
        "ExpectedResult": "*GIVEN* the log in Pre-requisites with traces as in Dataset\n*WHEN* reviewing such traces in Kibana using {*}functionName == '{*}{*}FUNCTIONNAME{*}{*}'{*}\n*THEN* the fields in log match with the field in Kibana as: \n||*Update*||*Release*||*Field*||*Name*||*Type*||*Description*||*Required in Kibana*||*Example*||CONTENT||"
    }
}
